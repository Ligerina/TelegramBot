name: Build on PROD

on:
  push:
    branches:
      - master

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      # Шаг 1: Checkout репозитория
      - name: Checkout repository
        uses: actions/checkout@v2

      # Шаг 2: Установка JDK 21
      - name: Set up JDK 21
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '21'

      # Шаг 3: Разрешение на выполнение gradlew
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      # Шаг 4: Сборка с Gradle
      - name: Build with Gradle
        run: ./gradlew build

      # Шаг 5: Тестирование с Gradle
      - name: Test with Gradle
        run: ./gradlew test

      # Шаг 6: Хранение артефактов сборки
      - name: Store build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: build/libs/*.jar

      # Шаг 7: Логин в Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      # Шаг 8: Построение Docker image
      - name: Build Docker image
        run: |
          docker build \
          -t ${{ secrets.DOCKER_HUB_USERNAME }}/tg-bot:latest .   

      # Шаг 9: Push Docker image в Docker Hub
      - name: Push Docker image
        run: |
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/tg-bot:latest

      # Шаг 10: Создание env-файла
      - name: Create env-file
        run: |
          echo "TELEGRAM_BOT_TOKEN=${{ secrets.TELEGRAM_BOT_TOKEN_PROD }}" > .env
          echo "TELEGRAM_BOT_NAME=${{ secrets.TELEGRAM_BOT_NAME_PROD }}" >> .env
          echo "DOCKER_HUB_USERNAME=${{ secrets.DOCKER_HUB_USERNAME }}" >> .env
          echo "DATABASE_PASSWORD=data" >> .env
          echo "DATABASE_USERNAME=data" >> .env

      # Шаг 11: Копирование env-файла на сервер
      - name: Copy env file to server
        uses: appleboy/scp-action@v0.1.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: ${{ secrets.SERVER_SSH_PORT }}
          source: ".env"
          target: "~"

      # Шаг 12: Копирование compose-файла на сервер
      - name: Copy compose file to server
        uses: appleboy/scp-action@v0.1.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: ${{ secrets.SERVER_SSH_PORT }}
          source: "docker-compose.yaml"
          target: "~"

      # Шаг 13: Подключение по SSH и обновление контейнера на сервере
      - name: SSH and update container on server
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: ${{ secrets.SERVER_SSH_PORT }}
          script: |
            cd ~
            docker compose pull tg-bot
            docker compose up -d tg-bot
